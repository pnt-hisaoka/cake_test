# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.2-apache-stretch-node-browsers
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_HOST: 127.0.0.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    steps:
      - checkout
      - restore_cache:
          key: gem-cache-v1-{{ checksum "~/project/composer.json" }}-{{ checksum "~/project/config/app.php" }}
          key: gem-cache-v1-{{ checksum "~/project/composer.json" }}
          key: gem-cache-v1

      - run:
          name: Install mysql
          command: |
            sudo apt-get update
            if $(sudo dpkg -l mysql-client* | grep 'no packages' > /dev/null) ; then
              sudo apt-get install mysql-client
            fi
            if $(sudo dpkg -l mysql-server* | grep 'no packages' > /dev/null) ; then
              sudo apt-get -y install mysql-server
            fi
      - run:
          name: Install PHP exts
          command: |
            if $(php -m | grep 'zip' > /dev/null) ; then
              sudo docker-php-ext-install zip
            fi
            if $(php -m | grep 'intl' > /dev/null) ; then
              sudo docker-php-ext-configure intl
              sudo docker-php-ext-install intl
            fi
            if $(php -m | grep 'pdo_mysql' > /dev/null) ; then
              sudo docker-php-ext-install pdo_mysql
            fi
  
      - save_cache:
          key: gem-cache-v1
          paths:
            - "~/cache"

      - run: composer install --dev --no-interaction

      - save_cache:
          key: gem-cache-v1-{{ checksum "~/project/composer.json" }}
          paths:
            - "~/cache"

      - run:
          name: Fix MySQL socket config
          command: |
            sudo sh -c "echo 'pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock' > /usr/local/etc/php/conf.d/pdo.ini"
      - run:
          name: Start database server
          command: |
            sudo service mysql start
            sleep 2
            dockerize -wait tcp://localhost:3306 -timeout 1m
            ps aux | grep mysql
      - run:
          name: Create non-admin user and test database
          command: |
            sudo mysql -u root -e "CREATE user myuser IDENTIFIED BY 'password';"
            sudo mysql -u root -e "CREATE Database circle_test;"
            sudo mysql -u root -e "GRANT ALL PRIVILEGES ON circle_test.* TO 'myuser'@'%' identified by 'password';"

      - save_cache:
          key: gem-cache-v1-{{ checksum "~/project/composer.json" }}-{{ checksum "~/project/config/app.php" }}
          paths:
            - "~/cache"

      - run:
          name: create test repot dir
          command: mkdir -p ~/phpunit

      - run: vendor/bin/phpunit --configuration phpunit.xml.dist --log-junit ~/phpunit/junit.xml
      
